version: "3.8"
services:

  # wallet-driving-application:
  #   container_name: wallet-driving-application
  #   image: wallet-wda:latest
  #   ports:
  #     - "4200:4200"
  #   networks:
  #     local_network:

  # wallet-creation-application:
  #   container_name: wallet-creation-application
  #   image: wallet-wca:latest
  #   environment:
  #     SPRING_PROFILES_ACTIVE: "local-docker"
  #     SPRING_DATASOURCE_URL: "jdbc:mysql://mysql:3306/test?useUnicode=true&characterEncoding=utf8&useSSL=false"
  #     SPRING_DATASOURCE_USERNAME: "root"
  #     SPRING_DATASOURCE_PASSWORD: "D83Wh$tb83D8"
  #     SERVER_PORT: "8080"
  #     APP_URL_API: "https://walletapidev.in2.es"
  #     APP_URL_ORION: "http://wallet-orion:1026/v2/entities"
  #     APP_URL_KEYCLOAK: "http://wallet-identity-provider:8084/realms/WalletIdP"
  #   command:
  #     - run
  #   links:
  #     - mysql
  #   ports:
  #     - "8080:8080"
  #   networks:
  #     local_network:

  # mysql:
  #   container_name: mysql
  #   image: mysql:8.0
  #   command: "--default-authentication-plugin=mysql_native_password"
  #   restart: always
  #   environment:
  #     MYSQL_ROOT_PASSWORD: "D83Wh$tb83D8"
  #     MYSQL_DATABASE: "test"
  #     MYSQL_USER: "user"
  #     MYSQL_PASSWORD: "1234"
  #   volumes:
  #     - mysql_data:/var/lib/mysql
  #   ports:
  #     - "3306:3306"
  #   networks:
  #     local_network:

  # wallet-data:
  #   container_name: wallet-data
  #   image: wallet-data:latest
  #   environment:
  #     SPRING_PROFILES_ACTIVE: "local-docker"
  #     SERVER_PORT: "8086"
  #     APP_URL_API: "http://wallet-data:8086"
  #     APP_URL_ORION-LD-ADAPTER: "http://orionld-adapter:8080"
  #   command: 
  #    - run
  #   ports:
  #   - "8086:8086"
  #   links:
  #     - orionld-adapter
  #   networks:
  #     local_network:

  # wallet-user-registry:
  #   container_name: wallet-user-registry
  #   image: wallet-user-registry:latest
  #   environment:
  #     SPRING_PROFILES_ACTIVE: "local-docker"
  #     SERVER_PORT: "8085"
  #     APP_URL_API: "http://wallet-user-registry:8085"
  #     WALLET_DATA_URL: "http://wallet-data:8086/api/users"
  #     KEYCLOAK_URL: "http://wallet-identity-provider:8084"
  #     KEYCLOAK_REALM: "WalletIdP"
  #     KEYCLOAK_CLIENT_SECRET: "fV51P8jFBo8VnFKMMuP3imw3H3i5mNck"
  #     KEYCLOAK_CLIENT_ID: "wallet-client"
  #   command:
  #     - run
  #   ports:
  #     - "8085:8085"
  #   networks:
  #     local_network:

  # wallet-crypto:
  #   container_name: wallet-crypto
  #   image: wallet-crypto:latest
  #   environment:
  #     SPRING_PROFILES_ACTIVE: "local-docker"
  #     SERVER_PORT: "8081"
  #     APP_URL_API: "http://wallet-crypto:8081"
  #     WALLET_DATA_URL: "http://wallet-data:8086/api/dids"
  #   command:
  #     - run
  #   ports:
  #     - "8081:8081"
  #   networks:
  #     local_network:


  # orionld-adapter:
  #   container_name: orionld-adapter
  #   image: orion-ld-adapter:latest
  #   environment:
  #     - "SPRING_PROFILES_ACTIVE=dev"
  #   ports:
  #     - "8082:8080"
  #   volumes:
  #     - ./provider-config.yml:/src/main/resources/application.yml
  #   networks:
  #     local_network:


  # orion-ld:
  #   container_name: orion-ld
  #   image: fiware/orion-ld:latest
  #   command: "-dbhost mongodb -port 1026"
  #   links:
  #     - mongodb
  #   ports:
  #     - "1026:1026"
  #   networks:
  #     local_network:

  # mongodb:
  #   container_name: mongodb
  #   image: mongo:4.4
  #   command: "--nojournal"
  #   volumes:
  #     - orion_data:/data/db
  #     - orion_db_config:/data/configdb
  #   networks:
  #     local_network:
  

  # wallet-identity-provider:
  #   container_name: wallet-identity-provider
  #   image: quay.io/keycloak/keycloak:latest
  #   ports:
  #     - 8084:8084
  #   command: 
  #     - 'start-dev'
  #     - '--import-realm'
  #   environment:
  #     KEYCLOAK_ADMIN: "admin"
  #     KEYCLOAK_ADMIN_PASSWORD: "1234"
  #     KC_HTTP_PORT: "8084"
  #     KC_DB: "postgres"
  #     KC_DB_URL: "jdbc:postgresql://postgres/keycloak"
  #     KC_DB_URL_PORT: "5433"
  #     KC_DB_USERNAME: "user"
  #     KC_DB_PASSWORD: "1234"
  #   volumes:
  #     - ./identity-service/imports:/opt/keycloak/data/import
  #   links:
  #     - postgres
  #   networks:
  #     local_network:

  # postgres:
  #   container_name: postgres
  #   image: postgres:latest
  #   volumes:
  #     - postgres_data:/var/lib/postgresql/data
  #   environment:
  #     POSTGRES_DB: "keycloak"
  #     POSTGRES_USER: "user"
  #     POSTGRES_PASSWORD: "1234"
  #   ports:
  #     - '5433:5433'
  #   restart: unless-stopped
  #   networks:
  #     local_network:

  vault:
    image: hashicorp/vault:latest
    container_name: vault
    ports:
      - "8250:8250"
    volumes:
      - ./config.json:/vault/config/config.json
      - VAULT_FILE:/vault/data
      - VAULT_LOGS:/vault/logs
      - VAULT_FILE:/vault/file
    environment:
      VAULT_DEV_ROOT_TOKEN_ID: 'my-custom-root-token'  # Token ra√≠z personalizado
      VAULT_ADDR: 'http://0.0.0.0:8250'
    cap_add:
      - IPC_LOCK
    entrypoint: vault server
    command: [
      "-config=/vault/config/config.json",
      "-dev",
      "-dev-root-token-id=my-custom-root-token"
    ]
    networks:
      local_network:

  # vault-init:
  #   image: alpine:latest
  #   container_name: vault-init
  #   volumes:
  #     - ./init-unseal-vault.sh:/init-unseal-vault.sh
  #   depends_on:
  #     - vault
  #   entrypoint: /bin/sh
  #   command: -c 'apk add --no-cache curl jq && chmod +x /init-unseal-vault.sh && /init-unseal-vault.sh'
  #   networks:
  #     local_network:
  

networks:
  local_network:

volumes:
  orion_data:
  orion_db_config:
  mysql_data:
  postgres_data:
  VAULT_LOGS:
  VAULT_FILE: